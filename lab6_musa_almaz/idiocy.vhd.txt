----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    10:26:27 05/17/2022 
-- Design Name: 
-- Module Name:    idiocy - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;
use ieee.math_real.all;
use ieee.std_logic_unsigned.all;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity idiocy is
	port(inp : in std_logic_vector(7 downto 0);
			--my_clock : in std_logic;
			binler : out std_logic_vector(3 downto 0);
			yuzler: out std_logic_vector(3 downto 0);
			onlar : out std_logic_vector(3 downto 0);
			birler: out std_logic_vector(3 downto 0)
			);
end idiocy;

architecture dataflow of idiocy is
signal t_binler : integer range 0 to 10;
	signal t_birler : integer range 0 to 10;
	signal t_onlar : integer range 0 to 10;
	signal t_yuzler : integer range 0 to 10;
	signal temp_data : std_logic_vector(10 downto 0);
	
	signal temp1 : integer range 0 to 3000;
	signal temp2 : integer range 0 to 3000;
	
	signal latest : integer range 0 to 3000;
	signal t_result : integer range 0 to 3000;

begin
with inp select
temp_data <= "00000000010" when "00000000",
"00000000011" when "00000001",
"00000000101" when "00000010",
"00000000111" when "00000011",
"00000001011" when "00000100",
"00000001101" when "00000101",
"00000010001" when "00000110",
"00000010011" when "00000111",
"00000010111" when "00001000",
"00000011101" when "00001001",
"00000011111" when "00001010",
"00000100101" when "00001011",
"00000101001" when "00001100",
"00000101011" when "00001101",
"00000101111" when "00001110",
"00000110101" when "00001111",
"00000111011" when "00010000",
"00000111101" when "00010001",
"00001000011" when "00010010",
"00001000111" when "00010011",
"00001001001" when "00010100",
"00001001111" when "00010101",
"00001010011" when "00010110",
"00001011001" when "00010111",
"00001100001" when "00011000",
"00001100101" when "00011001",
"00001100111" when "00011010",
"00001101011" when "00011011",
"00001101101" when "00011100",
"00001110001" when "00011101",
"00001111111" when "00011110",
"00010000011" when "00011111",
"00010001001" when "00100000",
"00010001011" when "00100001",
"00010010101" when "00100010",
"00010010111" when "00100011",
"00010011101" when "00100100",
"00010100011" when "00100101",
"00010100111" when "00100110",
"00010101101" when "00100111",
"00010110011" when "00101000",
"00010110101" when "00101001",
"00010111111" when "00101010",
"00011000001" when "00101011",
"00011000101" when "00101100",
"00011000111" when "00101101",
"00011010011" when "00101110",
"00011011111" when "00101111",
"00011100011" when "00110000",
"00011100101" when "00110001",
"00011101001" when "00110010",
"00011101111" when "00110011",
"00011110001" when "00110100",
"00011111011" when "00110101",
"00100000001" when "00110110",
"00100000111" when "00110111",
"00100001101" when "00111000",
"00100001111" when "00111001",
"00100010101" when "00111010",
"00100011001" when "00111011",
"00100011011" when "00111100",
"00100100101" when "00111101",
"00100110011" when "00111110",
"00100110111" when "00111111",
"00100111001" when "01000000",
"00100111101" when "01000001",
"00101001011" when "01000010",
"00101010001" when "01000011",
"00101011011" when "01000100",
"00101011101" when "01000101",
"00101100001" when "01000110",
"00101100111" when "01000111",
"00101101111" when "01001000",
"00101110101" when "01001001",
"00101111011" when "01001010",
"00101111111" when "01001011",
"00110000101" when "01001100",
"00110001101" when "01001101",
"00110010001" when "01001110",
"00110011001" when "01001111",
"00110100011" when "01010000",
"00110100101" when "01010001",
"00110101111" when "01010010",
"00110110001" when "01010011",
"00110110111" when "01010100",
"00110111011" when "01010101",
"00111000001" when "01010110", 
"00111001001" when "01010111",
"00111001101" when "01011000",
"00111001111" when "01011001",
"00111010011" when "01011010",
"00111011111" when "01011011",
"00111100111" when "01011100",
"00111101011" when "01011101",
"00111110011" when "01011110",
"00111110111" when "01011111",
"00111111101" when "01100000",
"01000001001" when "01100001",
"01000001011" when "01100010",
"01000011101" when "01100011",
"01000100011" when "01100100",
"01000101101" when "01100101",
"01000110011" when "01100110",
"01000111001" when "01100111",
"01000111011" when "01101000",
"01001000001" when "01101001",
"01001001011" when "01101010",
"01001010001" when "01101011",
"01001010111" when "01101100",
"01001011001" when "01101101",
"01001011111" when "01101110",
"01001100101" when "01101111",
"01001101001" when "01110000",
"01001101011" when "01110001",
"01001110111" when "01110010",
"01010000001" when "01110011",
"01010000011" when "01110100",
"01010000111" when "01110101",
"01010001101" when "01110110",
"01010010011" when "01110111",
"01010010101" when "01111000",
"01010100001" when "01111001",
"01010100101" when "01111010",
"01010101011" when "01111011",
"01010110011" when "01111100",
"01010111101" when "01111101",
"01011000101" when "01111110",
"01011001111" when "01111111",
"01011010111" when "10000000",
"01011011101" when "10000001",
"01011100011" when "10000010",
"01011100111" when "10000011",
"01011101111" when "10000100",
"01011110101" when "10000101",
"01011111001" when "10000110",
"01100000001" when "10000111",
"01100000101" when "10001000",
"01100010011" when "10001001",
"01100011101" when "10001010",
"01100101001" when "10001011",
"01100101011" when "10001100",
"01100110101" when "10001101",
"01100110111" when "10001110",
"01100111011" when "10001111",
"01100111101" when "10010000",
"01101000111" when "10010001",
"01101010101" when "10010010",
"01101011001" when "10010011",
"01101011011" when "10010100",
"01101011111" when "10010101",
"01101101101" when "10010110",
"01101110001" when "10010111",
"01101110011" when "10011000",
"01101110111" when "10011001",
"01110001011" when "10011010",
"01110001111" when "10011011",
"01110010111" when "10011100",
"01110100001" when "10011101",
"01110101001" when "10011110",
"01110101101" when "10011111",
"01110110011" when "10100000",
"01110111001" when "10100001",
"01111000111" when "10100010",
"01111001011" when "10100011",
"01111010001" when "10100100",
"01111010111" when "10100101",
"01111011111" when "10100110",
"01111100101" when "10100111",
"01111110001" when "10101000",
"01111110101" when "10101001",
"01111111011" when "10101010",
"01111111101" when "10101011",
"10000000111" when "10101100",
"10000001001" when "10101101",
"10000001111" when "10101110",
"10000011001" when "10101111",
"10000011011" when "10110000",
"10000100101" when "10110001",
"10000100111" when "10110010",
"10000101101" when "10110011",
"10000111111" when "10110100",
"10001000011" when "10110101",
"10001000101" when "10110110",
"10001001001" when "10110111",
"10001001111" when "10111000",
"10001010101" when "10111001",
"10001011101" when "10111010",
"10001100011" when "10111011",
"10001101001" when "10111100",
"10001111111" when "10111101",
"10010000001" when "10111110",
"10010001011" when "10111111",
"10010010011" when "11000000",
"10010011101" when "11000001",
"10010100011" when "11000010",
"10010101001" when "11000011",
"10010110001" when "11000100",
"10010111101" when "11000101",
"10011000001" when "11000110",
"10011000111" when "11000111",
"10011001101" when "11001000",
"10011001111" when "11001001",
"10011010101" when "11001010",
"10011100001" when "11001011",
"10011101011" when "11001100",
"10011111101" when "11001101",
"10011111111" when "11001110",
"10100000011" when "11001111",
"10100001001" when "11010000",
"10100001011" when "11010001",
"10100010001" when "11010010",
"10100010101" when "11010011",
"10100010111" when "11010100",
"10100011011" when "11010101",
"10100100111" when "11010110",
"10100101001" when "11010111",
"10100101111" when "11011000",
"10101010001" when "11011001",
"10101010111" when "11011010",
"10101011101" when "11011011",
"10101100101" when "11011100",
"10101110111" when "11011101",
"10110000001" when "11011110",
"10110001111" when "11011111",
"10110010011" when "11100000",
"10110010101" when "11100001",
"10110011001" when "11100010",
"10110011111" when "11100011",
"10110100111" when "11100100",
"10110101011" when "11100101",
"10110101101" when "11100110",
"10110110011" when "11100111",
"10110111111" when "11101000",
"10111001001" when "11101001",
"10111001011" when "11101010",
"10111001111" when "11101011",
"10111010001" when "11101100",
"10111010101" when "11101101",
"10111011011" when "11101110",
"10111100111" when "11101111",
"10111110011" when "11110000",
"10111111011" when "11110001",
"11000000111" when "11110010",
"11000001101" when "11110011",
"11000010001" when "11110100",
"11000010111" when "11110101",
"11000011111" when "11110110",
"11000100011" when "11110111",
"11000101011" when "11111000",
"11000101111" when "11111001",
"11000111101" when "11111010",
"11001000001" when "11111011",
"11001000111" when "11111100",
"11001001001" when "11111101",
"11001001101" when "11111110",
"11001010011" when "11111111",
"XXXXXXXXXXX" when others;
latest <= to_integer(unsigned(temp_data));
t_result <= latest;
	t_birler <= t_result mod 10;
	t_binler <= t_result / 1000;
	temp1 <= t_result - 1000 * t_binler;
	t_yuzler <= temp1 / 100;
	temp2 <= temp1 - 100 * t_yuzler;
	t_onlar <= temp2 / 10;
	--- turn digits to bcd
	birler <= std_logic_vector(to_unsigned(t_birler, birler'length));
	onlar <= std_logic_vector(to_unsigned(t_onlar, onlar'length));
	yuzler <= std_logic_vector(to_unsigned(t_yuzler, yuzler'length));
	binler <= std_logic_vector(to_unsigned(t_binler, binler'length));
end dataflow;

